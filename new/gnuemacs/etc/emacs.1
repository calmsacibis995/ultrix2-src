
.TH EMACS 1 "5 March 1986"
.UC 4
.SH NAME
emacs \- GNU project Emacs
.SH SYNOPSIS
.B emacs
[file ...]
.br
.SH DESCRIPTION
.I GNU Emacs
is a new version of Emacs written by the author of the original
(PDP-10) Emacs, Richard Stallman.  Its user functionality encompasses
anything any other Emacs does, and it is easily extensible since it is
written in a version of Lisp specifically designed to support editing.
Stallman encourages you to improve and extend Emacs, and urges that
you contribute your extensions to the GNU library.  Eventually GNU
(Gnu's Not Unix) will be a complete replacement for Berkeley Unix, all
of which everyone will be able to use free.
.PP
.I GNU Emacs
has extensive interactive self-documentation.  Control-h (backspace or
C-h) runs the self-documentation (Help) function.  Help Tutorial (C-h
t) requests an interactive tutorial which can teach beginners the
fundamentals of Emacs in a few minutes.  Help Apropos (C-h a) helps
you find a command given its functionality, Help Character (C-h c)
describes a given character's effect, Help Function (C-h f) describes
a given Lisp function specified by name, and Help Where-is (C-h w)
lets you specify a function and tells you what keys are bound to it.
.PP
.I GNU Emacs's
Undo can undo several steps of modification to your buffers, so it is
easy to recover from editing mistakes.
.PP
.I GNU Emacs's
many special packages handle mail reading (RMail) and sending (Mail),
outline editing (Outline), compiling (Compile), running subshells
within Emacs windows (Shell), running a Lisp read-eval-print loop
(Lisp-Interaction-Mode), and automated psychotherapy (Doctor).
.PP
There is an extensive reference manual, but
users of other Emacses
should have little trouble adapting even
without a copy.  Users new to Emacs will be able
to use basic features fairly rapidly by studying the tutorial and
using the self-documentation features.
.PP
.SH DISTRIBUTION
GNU Emacs is free; anyone may redistribute copies of GNU Emacs to
anyone under the terms stated in the GNU Emacs General Public License,
a copy of which accompanies each copy of GNU Emacs and which also
appears in the reference manual.
.PP
Copies of GNU Emacs may sometimes be received packaged with
distributions of Unix systems, but it is never included in the scope
of any license covering those systems.  Such inclusion would violate
the terms on which distribution is permitted.  In fact, the primary
purpose of the General Public License is to prohibit anyone from
attaching any other restrictions to redistribution of GNU Emacs.
.PP
You can order printed copies of the GNU Emacs Manual for $15.00/copy
postpaid from the Free Software Foundation, which develops GNU software
(contact them for quantity prices on the manual).  Their address is:
.nf
    Free Software Foundation
    1000 Mass Ave.
    Cambridge, MA 02138
.fi
Your local Emacs maintainer might also have copies available.  As
with all software and publications from FSF, everyone is permitted to
make and distribute copies of the Emacs manual.  The TeX source to the
manual is also included in the Emacs source distribution.
.PP
.SH FILES
/usr/local/emacs/src - C source files and object files

/usr/local/emacs/lisp - Lisp source files and compiled files
that define most editing commands.  Some are preloaded;
others are autoloaded from this directory when used.
  
/usr/local/emacs/man - sources for the Emacs reference manual.

/usr/local/emacs/etc - various programs that are used with
GNU Emacs, and some files of information.

/usr/local/emacs/etc/DOC.* - contains the documentation
strings for the Lisp primitives and preloaded Lisp functions
of GNU Emacs.  They are stored here to reduce the size of
Emacs proper.

/usr/local/emacs/etc/DIFF discusses GNU Emacs vs. Twenex Emacs;
.br
/usr/local/emacs/etc/CCADIFF discusses GNU Emacs vs. CCA Emacs;
.br
/usr/local/emacs/etc/GOSDIFF discusses GNU Emacs vs. Gosling Emacs.
.br
/usr/local/emacs/etc/SERVICE lists people offering various services
to assist users of GNU Emacs, including education, troubleshooting,
porting and customization.
.br
These files also have information useful to anyone wishing to write
programs in the Emacs Lisp extension language, which has not yet been fully
documented.

/usr/local/emacs/info - files for the Info documentation browser
(a subsystem of Emacs) to refer to.  Currently not much of Unix
is documented here, but the complete text of the Emacs reference
manual is included in a convenient tree structured form.

/usr/local/emacs/lock - holds lock files that are made for all
files being modified in Emacs, to prevent simultaneous modification
of one file by two users.

/usr/local/emacs/cpp - the GNU cpp, needed for building Emacs on
certain versions of Unix where the standard cpp cannot handle long
names for macros.

/usr/local/emacs/shortnames - facilities for translating long names to
short names in C code, needed for building Emacs on certain versions
of Unix where the C compiler cannot handle long names for functions
or variables.
.PP
.SH BUGS
There is a mailing list, bug-gnu-emacs@prep.ai.mit.edu on the internet
(ucbvax!prep.ai.mit.edu!bug-gnu-emacs on UUCPnet), for reporting Emacs
bugs and fixes.  But before reporting something as a bug, please try
to be sure that it really is a bug, not a misunderstanding or a
deliberate feature.  We ask you to read the section ``Reporting Emacs
Bugs'' near the end of the reference manual (or Info system) for hints
on how and when to report bugs.  Also, include the version number of
the Emacs you are running in \fIevery\fR bug report that you send in.

Do not expect a personal answer to a bug report.  The purpose of reporting
bugs is to get them fixed for everyone in the next release, if possible.
For personal assistance, look in the SERVICE file (see above) for
a list of people who offer it.

Please do not send anything but bug reports to this mailing list.
Send other stuff to info-gnu-emacs-request@prep.ai.mit.edu (or the
corresponding UUCP address).  For more information about Emacs mailing
lists, see the file /usr/local/emacs/etc/MAILINGLISTS.  Bugs tend
actually to be fixed if they can be isolated, so it is in your
interest to report them in such a way that they can be easily
reproduced.
.PP
Bugs that I know about are: shell will not work with programs
running in Raw mode.

