# mkkeytab - builds keyword.c, which is structure of keywords and
#  their identification numbers. also builds keyword.h, which has
#  defined constants giving keyword identification numbers.
#  input is list of keyword/identfication number pairs, (alphabetic
#  order-one pair per line) in file 'keywords', elements of a pair
#  are separated by one or more blanks or tabs.

procedure main(args)
local df, f, input, word

   input := open("keywords") | stop("unable to open 'keywords'")
   f := open("keyword.c","w")
   df := open("keyword.h","w")

   write(f, "#include \"keyword.h\"")   # put out table header
   write(f, "#include \"sym.h\"")
   write(f, "")
   write(f, "/*")
   write(f, " * keyword table")
   write(f, " */")
   write(f, "")
   write(f, "struct keyent keytab[] = {")

   every                               # put out table body
      trim(!input) ?
         if word := tab(upto(' \t')) then {
            tab(many(' \t'))
            write(df, "#define ",
                      left("K_"||ucase(word),16), right(tab(0),8))
            write(f, left("   \""||word||"\",", 19),
                      "    K_",ucase(word),",")
            }
         else
            write(&errout, "bad input: ", &subject)

   write(f, left("   \"\",", 19),"    -1")
   write(f, "   };")

end

procedure ucase(name)
   return map(name,&lcase,&ucase)
end
