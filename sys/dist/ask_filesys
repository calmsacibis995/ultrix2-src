#!/bin/sh
#
# Usage: sh ask_filsys
#
# Description: During the advanced installation, the user will be asked
#		about how to arrange the file system for /usr, /usr/users,
#		swap area, and dump area.  
#		This shell script probes the disk which the user want to
#		install and figure out which partitions are suitable for.
#		If the default partition is available.  It will show the
#			default partition for the user.
# 
# 001 - July, 1986    - Tungning Cherng
#		Probe the disks and partitions to show the table for the user.
#
# 000 - June, 1986    - Tung-Ning Cherng created
#
#	Edited prompts on Aug. 4, 1986 by Al Wojtas
#
LL="
"
ERMSG11=" ${LL}You have used all of the available partitions on this disk.
You must select another disk from the table, and then
choose a partition available on that disk."

ERMSG12=" ${LL}This error causes the installation procedure to stop. 
One possible cause for the error is a corrupt system disk. You may 
want to replace or use another system disk, and begin the installation 
again.  If this error message appears a second time, contact 
a DIGITAL representative." 

ERMSG13=" ${LL}One possible cause for the error is a corrupt disk.
Choose another disk from the table."

USRSIZE=24000  # Minimum size for /usr, only bin and base subsets
SWAPSIZE=6000  # Optimum for swap area
DUMPSIZE=4000  # Optimum for dump area

#
#This while loop obtains the location of the /usr file system.
#
while : true
do
	echo "
*** ALLOCATE THE /usr FILE SYSTEM ***

You can allocate the /usr file system to one of the disks listed 
in this table. See the Advanced Installation Guide for an
explanation of this table: ${LL}"
	USR=`finder -d`
	set xx $USR
	usr_D=$2; usr_d=$3; usr_u=$4
	case $usr_d$usr_u in
	$media_d$media_u )
		echo "
You attempted to allocate the /usr file system on ${media_d}${media_u}, which
contains your distribution medium."
		continue
		;;
	$root_d$root_u )
			;;
	* )	
		cd /dev
		MAKEDEV $usr_d$usr_u >/dev/null
		case $? in
		0 )	;;
		* )
			echo "
The MAKEDEV command could not make the special files for the $usr_d$usr_u 
device. ${ERMSG12}"
			exit 1 ;;
		esac
		cd /
		;;
	esac
	dd if=/dev/r${usr_d}${usr_u}c of=/tmp/wrdisk count=1 >/dev/null 2>&1 ||
	{
		echo "
The $usr_D, $usr_d$usr_u is not accessible.  Make sure the device is
on-line and write enabled."
		continue
	}
	dd if=/tmp/wrdisk of=/dev/r${usr_d}${usr_u}c count=1 >/dev/null 2>&1 ||
	{
		echo "
The $usr_D, $usr_d$usr_u must be write enabled."
		continue
	}
	/etc/chpt -q /dev/r${usr_d}${usr_u}c | sed 1,3d > /tmp/ptable
	case $? in
	0 )	;;
	* )
		echo "
The chpt command failed. Contact your DIGITAL representative."
		exit 1 ;;
	esac
	availp='a b c d e f g h'
	case  $usr_d$usr_u in
	$root_d$root_u )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$root_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $root_p"	#take out a partition
		availp=`delet_part "$avoidp" "$availp"`
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "b" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp b"	#take out b partition
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	part=`size_part "$availp" $USRSIZE`
	case $usr_d$usr_u in
	$root_d$root_u )
		case $root_D in
		RA82 | RD90 )
			def_part=d	;;
		* )
			def_part=g	;;
		esac
		;;
	* )
		def_part=x	;;
	esac
	>/tmp/partsize
	for k in $part
	do
	 	awk '{if ($1 == "'$k'") {yy=$1; xx=$4/2; zz=$5}} END \
{printf "    %s\t  --- \t%9d\t%s\n",yy,xx,zz}' /tmp/ptable >>/tmp/partsize
	done
	part=`cat /tmp/partsize`	
	usr_p=`ask_part "$part" "/usr file system" "$usr_d$usr_u" $def_part`
	echo "${LL}
Making the new file system for /usr on /dev/r$usr_d$usr_u$usr_p $usr_D ${LL}"
	newfs /dev/r$usr_d$usr_u$usr_p $usr_D
	case $? in
	0 )	;;
	* )
		echo "
The newfs command failed to construct the /usr file system on
/dev/r$usr_d$usr_u$usr_p $usr_D. ${ERMSG13}"
		continue 
		;;
	esac
	mount -o force /dev/$usr_d$usr_u$usr_p /usr
	case $? in
	0 )	;;
	* )
		echo "
The mount command failed to mount the /usr file system on
/dev/r$usr_d$usr_u$usr_p. ${ERMSG13} "
		continue 
		;;
	esac
	break
done

## for the first swap area
#

while : true
do
	echo "
*** ALLOCATE THE SWAP1 SPACE ***

You can allocate the swap1 space to one of the disks listed 
in this table. See the Advanced Installation Guide for an
explanation of this table: ${LL}"
	SWAP1=`finder -f`
	set xx $SWAP1
	swap1_D=$2; swap1_d=$3; swap1_u=$4
	case $swap1_d$swap1_u in
	$root_d$root_u )
		;;
	* )
		echo -n "
The swap1 space on $swap1_d$swap1_u $swap1_D, which is not the same disk as 
root file system located $root_d$root_u $root_D.  Are you sure <y/n>? "
		read ans
		case $ans in
		[Yy]* ) ;;
		* ) continue
			;;
		esac	
		;;
	esac
	case $swap1_d$swap1_u in
	$media_d$media_u )
		echo "
You attempted to allocate the swap1 space on ${media_d}${media_u}, which
contains your distribution medium."
		continue
		;;
	$root_d$root_u | $usr_d$usr_u ) 
		;;
	* )
		cd /dev
		MAKEDEV $swap1_d$swap1_u  >/dev/null
		case $? in
		0 )	;;
		* )
			echo "
The MAKEDEV command could not make the special files on the $swap1_d$swap1_u 
device. ${ERMSG12}"
			exit 1 ;;
		esac
		cd /
		;;
	esac
	dd if=/dev/r${swap1_d}${swap1_u}c of=/tmp/wrdisk count=1 >/dev/null 2>&1 ||
	{
		echo "
The $swap1_D, $swap1_d$swap1_u is not accessible.  Make sure the device is
on-line and write enabled."
		continue
	}
	dd if=/tmp/wrdisk of=/dev/r${swap1_d}${swap1_u}c count=1 >/dev/null 2>&1 ||
	{
		echo "
The $swap1_D, $swap1_d$swap1_u must be write enabled. "
		continue
	}
	/etc/chpt -q /dev/r${swap1_d}${swap1_u}c | sed 1,3d > /tmp/ptable
	case $? in
	0 )	;;
	* )
		echo "
The chpt command failed. Contact your DIGITAL representative."
		exit 1 ;;
	esac
	availp="a b c d e f g h"
	case $swap1_d$swap1_u in
	$root_d$root_u )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$root_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp a"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case $swap1_d$swap1_u in
	$usr_d$usr_u )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$usr_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $usr_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	part=`size_part "$availp" $SWAPSIZE` 
	case $part in
	"" )
		echo "
${ERMSG11}"
		continue
		;;
	esac
	case $swap1_d$swap1_u in
	$root_d$root_u )
			def_part=b	;;
	* )
			def_part=x	;;
	esac
	>/tmp/partsize
	for k in $part
	do
	 	awk '{if ($1 == "'$k'") {yy=$1; xx=$4/2; zz=$5}} END \
{printf "    %s\t  --- \t%9d\t%s\n",yy,xx,zz}' /tmp/ptable >>/tmp/partsize
	done
	part=`cat /tmp/partsize`	
	swap1_p=`ask_part "$part" "swap1 space" "$swap1_d$swap1_u" $def_part`
	break
done

## for the second swap area
#
while : true
do
	echo -n "
*** ALLOCATE THE SWAP2 SPACE ***

Do you want to allocate a second swap space? Type y or n [n]: "
	read ans
	case $ans in
	y )
			;;
	n | "" )
		break ;;
	* )
		continue ;;
	esac

echo "

You can allocate the swap2 space to one of the disks listed 
in this table. See the Advanced Installation Guide for an
explanation of this table: ${LL}"
		
	SWAP2=`finder -f`
	set xx $SWAP2
	swap2_D=$2; swap2_d=$3; swap2_u=$4
	case $swap2_d$swap2_u in
	$media_d$media_u )
		echo "
You attempted to allocate the swap2 space on ${media_d}${media_u}, which
contains your distribution medium."
		continue
		;;
	$root_d$root_u | $usr_d$usr_u | $swap1_d$swap1_u )
			;;
	* )
		cd /dev
		MAKEDEV $swap2_d$swap2_u  >/dev/null
		case $? in
		0 )	;;
		* )
			echo "
The MAKEDEV command could not make the special files on the $swap2_d$swap2_u 
device. ${ERMSG12}"
			exit 1 ;;
		esac
		cd /
		;;
	esac
	dd if=/dev/r${swap2_d}${swap2_u}c of=/tmp/wrdisk count=1 >/dev/null 2>&1 ||
	{
		echo "
The $swap2_D, $swap2_d$swap2_u is not accessible.  Make sure the device is
on-line and write enabled."
		continue
	}
	dd if=/tmp/wrdisk of=/dev/r${swap2_d}${swap2_u}c count=1 >/dev/null 2>&1 ||
	{
		echo "
The $swap2_D, $swap2_d$swap2_u must be write enabled. "
		continue
	}
	/etc/chpt -q /dev/r${swap2_d}${swap2_u}c | sed 1,3d > /tmp/ptable
	case $? in
	0 )	;;
	* )
		echo "
The chpt command failed. Contact your DIGITAL representative."
		exit 1 ;;
	esac
	availp="a b c d e f g h"
	case "$swap2_d$swap2_u" in
	"$root_d$root_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$root_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $root_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$swap2_d$swap2_u" in
	"$usr_d$usr_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$usr_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $usr_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$swap2_d$swap2_u" in
	"$swap1_d$swap1_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$swap1_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $swap1_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	part=`size_part "$availp" 0`
	case $part in
	"" )
		echo "${LL} ${ERMSG11}"
		continue
		;;
	esac
	case $swap2_d$swap2_u in
	$root_d$root_u )
			def_part=b	;;
	* )
			def_part=x	;;
	esac
	>/tmp/partsize
	for k in $part
	do
	 	awk '{if ($1 == "'$k'") {yy=$1; xx=$4/2; zz=$5}} END \
{printf "    %s\t  --- \t%9d\t%s\n",yy,xx,zz}' /tmp/ptable >>/tmp/partsize
	done
	part=`cat /tmp/partsize`	
	swap2_p=`ask_part "$part" "swap2 space" "$swap2_d$swap2_u" $def_part`
	break
done

## for the dump area
#
while : true
do
	echo "

*** ALLOCATE THE CRASH DUMP SPACE ***

You can allocate the crash dump space to one of the disks listed 
in this table. See the Advanced Installation Guide for an
explanation of this table: ${LL}"
	DUMP=`finder -f`
	set xx $DUMP
	dump_D=$2; dump_d=$3; dump_u=$4
	case $dump_d$dump_u in
	$media_d$media_u )
		echo "
You attempted to allocate the dump space on ${media_d}${media_u}, which
contains your distribution medium."
		continue
		;;
	$root_d$root_u | $usr_d$usr_u | $swap1_d$swap1_u | $swap2_d$swap2_u )
			;;
	* )
		cd /dev
		MAKEDEV $dump_d$dump_u  >/dev/null
		case $? in
		0 )	;;
		* )
			echo "
The MAKEDEV command could not make the special files on the $dump_d$dump_u 
device. ${ERMSG12}"
			exit 1 ;;
		esac
		cd /
		;;
	esac
       dd if=/dev/r${dump_d}${dump_u}c of=/tmp/wrdisk count=1 >/dev/null 2>&1 ||
	{
		echo "
The $dump_D, $dump_d$dump_u is not accessible.  Make sure the device is
on-line and write enabled."
		continue
	}
       dd if=/tmp/wrdisk of=/dev/r${dump_d}${dump_u}c count=1 >/dev/null 2>&1 ||
	{
		echo "
The $dump_D, $dump_d$dump_u must be write enabled. "
		continue
	}
	/etc/chpt -q /dev/r${dump_d}${dump_u}c | sed 1,3d > /tmp/ptable
	case $? in
	0 )	;;
	* )
		echo "
The chpt command failed. Contact your DIGITAL representative."
		exit 1 ;;
	esac
	availp="a b c d e f g h"
	case "$dump_d$dump_u" in
	"$root_d$root_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$root_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $root_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$dump_d$dump_u" in
	"$usr_d$usr_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$usr_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $usr_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$dump_d$dump_u" in
	"$swap1_d$swap1_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$swap1_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $swap1_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$dump_d$dump_u" in
	"$swap2_d$swap2_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$swap2_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $swap2_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
### dump area can be the same as swap area.
	case $dump_d$dump_u in
	$swap1_d$swap1_u )
		swap1_flg=0
		for p in "$availp"
		do
			case $p in
			$swap1_p )
				swap1_flg=1 
				break
				;;
			esac
		done
		case $swap1_flg in
		0 )
			availp="$availp $swap1_p"
			;;
		esac
		;;
	esac
	case $dump_d$dump_u in
	$swap2_d$swap2_u )
		swap2_flg=0
		for p in "$availp" 
		do
			case $p in
			$swap2_p )
				swap2_flg=1 
				break
				;;
			esac
		done
		case $swap2_flg in
		0 )
			availp="$availp $swap2_p"
			;;
		esac
		;;
	esac
	part=`size_part "$availp" $DUMPSIZE`
	case $part in
	"" )
		echo "
${ERMSG11}"
		continue
		;;
	esac
	case $dump_d$dump_u in
	$root_d$root_u )
			def_part=b	;;
	* )
			def_part=x	;;
	esac
	>/tmp/partsize
	for k in $part
	do
	 	awk '{if ($1 == "'$k'") {yy=$1; xx=$4/2; zz=$5}} END \
{printf "    %s\t  --- \t%9d\t%s\n",yy,xx,zz}' /tmp/ptable >>/tmp/partsize
	done
	part=`cat /tmp/partsize`	
	dump_p=`ask_part "$part" "crash dump space" "$dump_d$dump_u" $def_part`
	break
done


## for the users area
#
while : true
do
	echo -n "
*** NAME THE /usr/users DIRECTORY ***

Type the name of the /usr/users directory
[/usr/users]: "
	read usrusers 
	case $usrusers in
	"" )
		echo "
You specified /usr/users as the directory name."
		usrusers="/usr/users"
		;;
	* )
		echo -n "
You specified  $usrusers  as the directory name. 
Is this correct? Type y or n [n]:  "
		read resp 
		case $resp in
		y* | Y* ) ;;
		* )
			continue
			;;
		esac
		;;
	esac
	break
done

while : true
do
	echo "

*** ALLOCATE THE $usrusers FILE SYSTEM ***

You can allocate the $usrusers file system to one of the disks 
listed in this table. See the Advanced Installation Guide for an
explanation of this table: ${LL}"
	USERS=`finder -f`
	set xx $USERS
	users_D=$2; users_d=$3; users_u=$4
	case $users_d$users_u in
	$media_d$media_u )
		echo "
You attempted to allocate the users space on ${media_d}${media_u}, which
contains your distribution medium."
		continue
		;;
	$root_d$root_u | $usr_d$usr_u | $swap1_d$swap1_u | \
		$swap2_d$swap2_u | $dump_d$dump_u )
			;;
	* )
		cd /dev
		MAKEDEV $users_d$users_u  >/dev/null
		case $? in
		0 )	;;
		* )
			echo "
The MAKEDEV command could not make the special files on the $users_d$users_u 
device. ${ERMSG12}"
			exit 1 ;;
		esac
		cd /
		;;
	esac
	dd if=/dev/r${users_d}${users_u}c of=/tmp/wrdisk count=1 >/dev/null 2>&1 ||
	{
		echo "
The $users_D, $users_d$users_u is not accessible.  Make sure the device is
on-line and write enabled."
		continue
	}
	dd if=/tmp/wrdisk of=/dev/r${users_d}${users_u}c count=1 >/dev/null 2>&1 ||
	{
		echo "
The $users_D, $users_d$users_u must be write enabled. "
		continue
	}
	/etc/chpt -q /dev/r${users_d}${users_u}c | sed 1,3d > /tmp/ptable
	case $? in
	0 )	;;
	* )
		echo "
The chpt command failed. Contact your DIGITAL representative."
		continue ;;
	esac
	availp="a b c d e f g h"
	case "$users_d$users_u" in
	"$root_d$root_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$root_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $root_p "	#take out a partition
		availp=`delet_part "$avoidp" "$availp"`
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "b" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp b"	#take out b partition
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac

## take out the /usr overlap area

	case "$users_d$users_u" in
	"$usr_d$usr_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$usr_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $usr_p"    
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$users_d$users_u" in
	"$swap1_d$swap1_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$swap1_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $swap1_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$users_d$users_u" in
	"$swap2_d$swap2_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$swap2_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $swap2_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
	case "$users_d$users_u" in
	"$dump_d$dump_u" )
		avoidp=`cat /tmp/ptable | awk '{if ( $1 == "'$dump_p'" ) print $5}' | sed s/,/\ /g`
		avoidp="$avoidp $dump_p"
		availp=`delet_part "$avoidp" "$availp"`
		;;
	esac
## /usr can be in /usr/users
	case $users_d$users_u in
	$usr_d$usr_u )
		usr_flg=0
		for p in "$availp"
		do
			case $p in
			$usr_p )
				usr_flg=1
				break
				;;
			esac
		done
		case $usr_flg in
		0 )
			availp="$availp $usr_p"
			;;
		esac
		;;
	esac
	case $users_d$users_u in
	$root_d$root_u )
		case $root_D in
		RD52 | RD53 | RD54 | RD31 | RD32 | RP05 | RP06 )
			def_part=g	;;
		* )	
			def_part=h	;;
		esac
		;;
	* )
			def_part=x	;;
	esac
	part=$availp
	>/tmp/partsize
	for k in $part
	do
	 	awk '{if ($1 == "'$k'") {yy=$1; xx=$4/2; zz=$5}} END \
{printf "    %s\t  --- \t%9d\t%s\n",yy,xx,zz}' /tmp/ptable >>/tmp/partsize
	done
	part=`cat /tmp/partsize`	
	users_p=`ask_part "$part" "$usrusers file system" "$users_d$users_u" $def_part`
	mkdir $usrusers
	chmod 755 $usrusers
	case $usr_d$usr_u$usr_p in
	$users_d$users_u$users_p )
		;;
	* )
		while : true	
		do
			echo -n "

*** INITIALIZE THE $usrusers FILE SYSTEM ***

The initialization of $usrusers file system will OVERWRITE the data on 
$users_d$users_u$users_p partition.

Do you want to initialize the $usrusers file system? Type
y or n [no default]: "
			read resp
			case $resp in
			y* | Y* ) 
				umount /dev/$users_d$users_u$users_p > /dev/null 2>&1
				echo "
Making the new file system for $usrusers on 
/dev/r$users_d$users_u$users_p $users_D ${LL}"
				newfs /dev/r$users_d$users_u$users_p $users_D
				case $? in
				0 ) ;;
				* )
					echo "
The newfs command failed to construct the $usrusers file system on
/dev/r$users_d$users_u$users_p $users_D ${ERMSG13}"
					continue 2 
					;;
				esac
				mount -o force /dev/$users_d$users_u$users_p $usrusers
				case $? in
				0 )	;;
				* )
					echo "
The mount command failed to mount the $usrusers file system on
/dev/$users_d$users_u$users_p. ${ERMSG13} "
					continue 2
					;;
				esac
				;;
			n* | N* )  ;;
			* )  continue
				;;
			esac
			break
		done
		;;
	esac
	break
done

