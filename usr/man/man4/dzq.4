.TH dzq 4
.SH NAME
dzq \- DZQ11 communications multiplexer
.SH SYNTAX
.B "device dz0 at uba0 csr 0160100 flags 0x????"
.br
.ti +0.5i
.B "vector dzrint dzxint"
.SH DESCRIPTION
A DZQ11 provides 4 communication lines with partial modem control,
adequate for dialup use.
Each line attached to the DZQ11 communications multiplexer
behaves as described in
tty(4)
and may be set to run at any of 16 speeds; see
tty(4)
for the encoding.
.PP
Bit
.I i
of flags may be specified for a dzq to say that a line is not properly
connected, and that the line should be treated as hard-wired with carrier
always present.  Thus specifying ``flags 0x04'' in the specification of dzq0
would cause line 2 to be treated in this way.
.PP
The dzq driver normally uses its input silos
and polls for input at each clock tick (10 milliseconds)
rather than taking an interrupt on each input character.
.SH DIAGNOSTICS
.PP
\fBdz%d: silo overflow\fR.  The 64 character input silo overflowed
before it could be serviced.  This can happen if a hard error occurs
when the cpu is running with elevated priority, as the system will
then print a message on the console with interrupts disabled.
.SH FILES
.nf
.DT
/dev/tty??
/dev/ttyd?		(modem lines only)
.fi
.SH SEE ALSO
tty(4), MAKEDEV(8)
