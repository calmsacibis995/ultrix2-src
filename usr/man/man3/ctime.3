.TH ctime 3
.SH NAME
ctime, localtime, gmtime, asctime, timezone (non-System V Environment) or tzset
(System V Environment) \- convert date and time to string
.SH SYNTAX
As shown, the 
.PN ctime,
.PN localtime,
.PN gmtime,
and
.PN asctime 
calls are common to both the non-System V environment and the
System V environment.  The 
.PN timezone 
call is unique to the non-System V environment, and the
.PN tzset
call is unique to the System V environment.
.PP
.SH Common to Both Environments
.PP
.nf
.B #include <time.h>
.PP
.B char \(**ctime (clock)
.B long \(**clock;
.PP
.B struct tm \(**localtime (clock)
.B long \(**clock;
.PP
.B struct tm \(**gmtime (clock)
.B long \(**clock;
.PP
.B char \(**asctime (tm)
.B struct tm \(**tm;
.SH Non-System V Environment Only
.PP
.B char *timezone(zone, dst)
.SH System V Environment Only
.PP
.B extern long timezone;
.PP
.B extern int daylight;
.PP
.B extern char \(**tzname[2];
.PP
.B void tzset ( )
.SH DESCRIPTION
The
.PN ctime
call converts a long integer, pointed to by
.IR clock ,
representing the time in seconds since
00:00:00 GMT, January 1, 1970,
and returns a pointer to a
26-character string
in the following form.
All the fields have constant width.
.PP
.RS
Sun Sep 16 01:03:52 1985\\n\\0
.RE
.PP
The
.PN localtime
and
.PN gmtime
calls return pointers to ``tm'' structures, described below.
The
.PN localtime
call corrects for the time zone and possible Daylight Savings Time;
.PN gmtime
converts directly to Greenwich Mean Time (\s-1GMT\s0), which is the
time the ULTRIX system uses.
.PP
The
.PN asctime
call converts a ``tm'' structure to a 26-character string,
as shown in the above example,
and returns a pointer
to the string.
.PP
Declarations of all the functions and externals, and the ``tm'' structure,
are in the
.I <time.h>\^
header file.
The structure declaration is:
.EX
struct tm {
        int tm_sec; /\(** seconds (0 - 59) \(**/
        int tm_min; /\(** minutes (0 - 59) \(**/
        int tm_hour; /\(** hours (0 - 23) \(**/
        int tm_mday; /\(** day of month (1 - 31) \(**/
        int tm_mon; /\(** month of year (0 - 11) \(**/
        int tm_year; /\(** year \- 1900 \(**/
        int tm_wday; /\(** day of week (Sunday = 0) \(**/
        int tm_yday; /\(** day of year (0 - 365) \(**/
        int tm_isdst;
};
.EE
.I Tm_isdst\^
is nonzero if Daylight Savings Time is in effect.
.SH Non-System V Environment Only
The
.PN timezone
call returns the name of the time zone associated with its
first argument, which is measured in minutes westward
from Greenwich.  If the second argument is 0, the standard
name is used.  Otherwise, the Daylight Savings Time
version is used.
If the required name does not appear in a table built
into the routine, the difference from GMT is produced.
For example, in Afghanistan,
.I timezone(-(60*4+30), 0) is appropriate because
it is 4:30 ahead of GMT and the string GMT+4:30
is produced.
.SH System V Environment Only
The external
.B long
variable
.I timezone
contains the difference, in seconds, between \s-1GMT\s0 and local
standard time (in \s-1EST\s0,
.I timezone\^
is 5\(**60\(**60);
the external variable
.I daylight\^
is nonzero if and only if the standard
USA
Daylight Savings Time conversion should be applied.
The program knows about the peculiarities
of this conversion in 1974 and 1975;
if necessary,
a table for these years can be extended.
.PP
If an environment variable named
.SM
.B TZ
is present,
.PN asctime
uses the contents of the variable to override the default time
zone.
The value of
.SM
.B TZ
must be a three-letter time zone name, followed by a number
representing the difference between local time and Greenwich Mean
Time in hours, followed by an optional three-letter name for
a time zone on Daylight Savings Time.
For example, the setting for New Jersey would be
.SM
.BR EST5EDT .
The effects of setting
.SM
.B TZ
are thus to change the values of the external variables
.I timezone\^
and
.IR daylight ;
in addition, the time zone names contained in the external variable
.PP
.B
 	char \(**tzname[2] = { "\s-1EST\s0", "\s-1EDT\s0" };
.PP
are set from the environment variable
.SM
.BR TZ .
The function
.PN tzset
sets these external variables from
.SM
.BR TZ ;
.PN tzset\^
is called by
.PN asctime\^
and may also be called explicitly by the user.
.SH RESTRICTIONS
The return values point to static data
whose content is overwritten by each call.
.SH "SEE ALSO"
getenv(3), time(3), environ(7).
