.\" Last modified by MJT on 3-Feb-85  2013
.\"  Moved example flush left and reduced fontsize as per BAS (MJT 3-Feb-86)
.\"  Fixed whatis problem  (MJT 22-Aug-85)
.\"   This file was last edited by Carolyn Belman, incorporating
.\"   comments from Larry Cohen and Bev Michaud, August 2, 1985.
.\"
.TH getttyent 3
.SH NAME
getttyent, getttynam, setttyent, endttyent \- get ttys file entry 
.SH SYNTAX
\fB#include <ttyent.h>\fR
.br
\fBstruct ttyent *getttyent\|(\|)\fR
.br
\fBstruct ttyent *getttynam\|(\|\fIname\fB\|)\fR
.br
\fBint setttyent\|(\|)\fR
.br
\fBint endttyent\|(\|)\fR
\fBchar *\fIname\fR
.SH DESCRIPTION
.PP
These functions allow a program to access data in the
file /etc/ttys.
The
.PN getttyent
function reads the /etc/ttys
file line by line, opening the file if
necessary.
.PN setttyent 
rewinds the file, and
.PN endttyent
closes it.
.PN getttynam
searches from the beginning of the file until a matching name
is found, or until end-of-file is encountered.
.PP
The functions 
.PN getttyent
and 
.PN getttynam
each return a pointer to an object
that has the following structure. 
Each element of the structure contains
one field of a line in the /etc/ttys
file.
.EX 0
struct ttyent {         /* see getttyent(3) */
       char *ty_name;   /* terminal device name */
       char *ty_getty;  /* command to execute, usually getty */
       char *ty_type;   /* terminal type for termcap (3X) */
       int  ty_status;  /* status flags (see below for defines) */
       char *ty_window; /* command to start up window manager */
       char *ty_comment;/* usually the location of the terminal */
       };

#define TTY_ON      0x1  /* enable logins (startup getty) */
#define TTY_SECURE  0x2  /* allow root to login */
#define TTY_LOCAL   0x4  /* line is local direct connect and
                         should ignore modem signals */
#define TTY_SHARED  0x8  /* line is shared - i.e. can be use
                         for both incoming and outgoing
                         connections. */

extern struct ttyent *getttyent();
extern struct ttyent *getttynam();
.EE
A description of the fields follows:
.IP ty_name
is the name of the terminal's special file in
the directory 
.PN /dev.
.IP ty_getty
is the command 
invoked by 
.PN init
to initialize terminal line characteristics.
This command is usually
.PN getty(8),
but any arbitrary command  can
be  used.  A typical use is to initiate a terminal
emulator in a window system.
.IP ty_type
is the name of the default terminal type  connected
to this tty line.  This is typically a
name from the 
.PN termcap(5) 
data base.  The
environment variable `TERM' is initialized with
this name by 
.PN login(1).
.IP ty_status
is a mask of bit flags that indicate  various
actions allowed on this terminal line. The
following is a description of each flag.
.RS
.IP TTY_ON
Enables logins.  For instance, 
.PN init(8)
will start the specified 
.PN getty
command on this entry.
.IP TTY_SECURE 
Allows root to login on this  terminal.  TTY_ON must
also be
included for this to work.
.IP TTY_LOCAL
Indicates that the line is to ignore modem signals.  
.IP TTY_SHARED
Indicates that the line can be used for both incoming
and outgoing connections.
.RE
.IP ty_window
is the quoted string of a command to execute
for a window system associated with the line.
If none is specified, this will be a null
string.
.IP ty_comment
Currently unused. 
.SH RESTRICTIONS
.PP
The information returned is in a static area, so
you must copy it to save it.  (Static areas
are described in \fIThe C Programming Language\fR, in
Volume II of the ULTRIX Supplementary Documentation. 
.SH DIAGNOSTICS
.PP
A null pointer (0) is returned on an end-of-file
or error.
.SH FILES
.PP
.IP /etc/ttys 
The file examined by these routines. 
.SH SEE ALSO
ttyname(3), ttys(5), init(8)
