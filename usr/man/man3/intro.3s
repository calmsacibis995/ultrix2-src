.TH intro 3s
.SH NAME
stdio \- standard buffered input/output package
.SH SYNTAX
.B #include <stdio.h>
.PP
.SM
.B FILE
.B *stdin;
.br
.SM
.B FILE
.B *stdout;
.br
.SM
.B FILE
.B *stderr;
.SH DESCRIPTION
The functions described in section 3s constitute a user-level buffering
scheme.  The in-line macros
.PN getc
and
.PN putc(3s)
handle characters quickly.  The higher level routines
.PN gets ,
.PN fgets ,
.PN scanf ,
.PN fscanf ,
.PN fread ,
.PN puts ,
.PN fputs ,
.PN printf ,
.PN fprintf ,
.PN fwrite
all use
.PN getc
and
.PN putc ;
they can be freely intermixed.
.PP
A file with associated buffering is called a
.IR stream ,
and is declared to be a pointer to a defined type
.SM FILE.
The fopen(3s) subroutine
creates certain descriptive data for a stream
and returns a pointer to designate
the stream in all further transactions.
There are three normally open streams with constant pointers declared in
the include file and associated with the standard open files:
.TP 10n
.B stdin
standard input file
.br
.ns
.TP
.B stdout
standard output file
.br
.ns
.TP
.B stderr
standard error file
.PP
A constant `pointer'
.SM NULL
(0)
designates no stream at all.
.PP
An integer constant
.SM EOF
(\-1) is returned upon end of file or error by integer functions that
deal with streams.
.PP
Any routine that uses the standard input/output package
must include the header file < stdio.h >
of pertinent macro definitions.
The functions and constants mentioned in sections labeled 3S
are declared in the include file and need no further declaration.
The constants, and the following `functions' are
implemented as macros; redeclaration of these names is perilous:
.PN getc ,
.PN getchar ,
.PN putc ,
.PN putchar ,
.PN feof ,
.PN ferror ,
.PN fileno .
.PP					.\" Begin
The GFLOAT version of
.IR libc
is used when you use the cc(1) command with the 
.B \-Mg
option, or you use the ld(1)
command with the 
.B \-lcg
option.  
The GFLOAT version of
.IR libc
must be used with modules 
compiled with cc(1) 
using the
.B \-Mg
option. 
.PP
Note that neither the compiler nor the linker ld(1)
can detect when mixed double floating point types
are used, and the program may produce erroneous
results if this occurs.		
.SH SYSTEM V COMPATIBILITY
This library contains System V compatibility features that
are available to general ULTRIX programs.  For a discussion of how
these features are documented, and how to specify that the
System V environment is to be used in compiling and linking
your programs, see intro(3).
.SH DIAGNOSTICS
The value
.SM EOF
is returned uniformly to indicate that a
.SM FILE
pointer has not been initialized with
.PN fopen ,
input (output) has been attempted on an output (input) stream, or a
.SM FILE
pointer designates corrupt or otherwise unintelligible
.SM FILE
data.
.PP
For purposes of efficiency, this implementation of the standard library
has been changed to line buffer
output to a terminal by default and attempts
to do this transparently by flushing the output whenever a 
read(2)
from the standard input is necessary.
This is almost always transparent,
but may cause confusion or malfunctioning of programs which use
standard I/O routines but use read(2)
themselves to read from the standard input.
.PP
In cases where a large amount of computation is done after printing
part of a line on an output terminal, it is necessary to fflush (3s)
the standard output before going off and computing so that the output
will appear.
.SH FILES
/lib/libc.a
/usr/lib/libcg.a			.\" End Bar		
.SH "SEE ALSO"
open(2), close(2), read(2), write(2), fread(3s), fseek(3s), ferror(3s),
fclose(3s), fopen(3s).  		.\" Begin and End .\"
