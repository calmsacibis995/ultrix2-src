.TH shmx 8 
.SH NAME
shmx \- shared memory exerciser
.SH SYNTAX
.B /usr/field/shmx
[
.B \-h
] [
.BI \-o file
.B ] [
.BI \-t i
.B ] [
.BI \-m j
.B ] [
.BI \-s k
.B ] [
.BI \-v
.B ]
.SH DESCRIPTION
The 
.PN shmx 
memory exerciser spawns a background
process
.PN shmxb
and these two processes exercise the shared memory
segments. They each take turns writing and reading
the other's data in the segments.
.PP
You can specify the number of memory segments to test 
and the size of the segment to be tested by  
.PN shmx
and
.PN shmxb
processes. The 
.PN shmx
exerciser
runs until the process
receives a
.CT C
or a \fBkill -15 \fIpid\fR.
.PP
A logfile is made in /usr/field
for you to examine and then remove. If there are errors
in the logfile, check the /usr/adm/syserr/syserr.<hostname> 
file, where the driver and kernel error
messages are saved.
The 
.PN shmx
exerciser is automatically invoked when the 
.PN memx
exerciser is started.  You can also run 
.PN shmx
by itself.
.SH OPTIONS
.IP \fB\-h\fR 1i
Print the help message for the
.PN shmx
command.
.IP \fB\-v\fR 1i
Use the fork(2) system call instead of vfork(2)
to spawn
.PN shmxb .
.IP \fB\-o\fIfile\fR 1i
Save diagnostic output in \fIfile\fR.
.IP \fB\-t\fIi\fR 1i
Run time in minutes (\|\fIi\fR\|).  The default is to run until
the process receives a
.CT C 
or a \fBkill -15 \fIpid\fR.
.IP \fB\-m\fIj\fR 1i
The memory segment size in bytes (\|\fIj\fR\|) to be tested by the
processes.  Must be greater than 0.  The default is
SMMAX/6.  (SMMAX is a system parameter set in the file
.PN sys/conf/param.c .) 
.IP \fB\-s\fIk\fR 1i
The number of memory segments (\|\fIk\fR\|).  The default is 6.
The maximum is also 6.
.SH EXAMPLES
The following example tests six memory segments (default),
each with a segment size of SMMAX/6, until a
.CT C
or \fBkill -15\fI pid\fR is received.
.EX
% /usr/field/shmx 
.EE
The following example runs three memory segments of size 100,000
bytes for 180 minutes in the background.
.EX
% /usr/field/shmx -t180 -m100000 -s3 &
.EE
.SH "SEE ALSO"
System Management Guide
