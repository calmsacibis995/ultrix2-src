.TH stat 2
.SH NAME
stat, lstat, fstat \- get file status
.SH SYNTAX
.nf
.ft B
#include <sys/types.h>
#include <sys/stat.h>
.PP
.ft B
stat(path, buf)
char *path;
struct stat *buf;
.PP
.ft B
lstat(path, buf)
char *path;
struct stat *buf;
.PP
.ft B
fstat(fd, buf)
int fd;
struct stat *buf;
.fi
.ft R
.SH DESCRIPTION
The
.PN stat
system call
obtains information about the file
.IR path .
Read, write or execute
permission of the named file is not required, but all directories
listed in the path name leading to the file must be reachable.
.PP
The
.PN lstat
system call
is like 
.PN stat
except in the case where the named file is a symbolic link,
in which case
.PN lstat
returns information about the link,
while
.PN stat
returns information about the file the link references.
.PP
The
.PN fstat
system call
obtains the same information about an open file
referenced by the argument descriptor, such as would
be obtained by an
.PN open
call.
.PP
The
.I buf
is a pointer to a
.PN stat
structure into which information is placed concerning the file.
The contents of the structure pointed to by
.I buf
.EX 0
struct stat {
	dev_t	st_dev;	/* device inode resides on */
	ino_t	st_ino;	/* this inode's number */
	u_short	st_mode;	/* protection */
	short	st_nlink;	/* number or hard links to the file */
	short	st_uid;	/* user-id of owner */
	short	st_gid;	/* group-id of owner */
	dev_t	st_rdev;	/* the device type, for inode that is device */
	off_t	st_size;	/* total size of file */
	time_t	st_atime;	/* file last access time */
	int	st_spare1;
	time_t	st_mtime;	/* file last modify time */
	int	st_spare2;
	time_t	st_ctime;	/* file last status change time */
	int	st_spare3;
	long	st_blksize;	/* optimal blocksize for file system i/o ops */
	long	st_blocks;	/* actual number of blocks allocated */
	long	st_spare4[2];
    };
.EE
.PP
.TP 12
st_atime
Time when file data was last read or modified.
Changed by the following system
calls,
mknod(2), utimes(2), read(2), and write(2).
For reasons of efficiency, 
st_atime is not set when a directory
is searched, although this would be more logical.
.TP 12
st_mtime
Time when data was last modified.
It is not set by changes of owner, group, link count, or mode.
Changed by the following system calls,
mknod(2), utimes(2), and write(2).
.TP 12
st_ctime
Time when file status was last changed.
It is set both both by writing and changing the i-node.
Changed by the following system calls,
chmod(2), chown(2), link(2), mknod(2), unlink(2), utimes(2),
and write(2).
.PP
The status information word \fIst_mode\fP has bits:
.EX 0
#define S_IFMT	0170000	/* type of file */
#define\ \ \ \ S_IFDIR	0040000	/* directory */
#define\ \ \ \ S_IFCHR	0020000	/* character special */
#define\ \ \ \ S_IFBLK	0060000	/* block special */
#define\ \ \ \ S_IFREG	0100000	/* regular */
#define\ \ \ \ S_IFLNK	0120000	/* symbolic link */
#define\ \ \ \ S_IFSOCK	0140000	/* socket */
#define\ \ \ \ S_IFIFO	0010000	/* FIFO - named pipe */
#define S_ISUID	0004000	/* set user id on execution */
#define S_ISGID	0002000	/* set group id on execution */
#define S_ISVTX	0001000	/* save swapped text even after use */
#define S_IREAD	0000400	/* read permission, owner */
#define S_IWRITE	0000200	/* write permission, owner */
#define S_IEXEC	0000100	/* execute/search permission, owner */
.EE
.PP
The mode bits 0000070 and 0000007 encode group and
others permissions.  For further information, see
chmod(2).
.PP
When
.I fd
is associated with a pipe,
.B fstat
returns a buffer with only st_blksize set.
.PP
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.I errno
is set to indicate the error.
.SH RESTRICTIONS
Applying
.PN fstat
to a socket returns a zero'd buffer and [EOPNOTSUPP].
.PP
The fields in the stat structure currently marked 
.IR st_spare1 ,
.IR st_spare2 ,
and
.I st_spare3
are present in preparation for inode time stamps expanding
to 64 bits.  This, however, can break certain programs which
depend on the time stamps being contiguous, in calls to
utimes(2).
.SH DIAGNOSTICS
The
.PN stat
and
.PN lstat
system calls
will fail if one or more of the following are true:
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[EINVAL]
The pathname contains a character with the high-order bit set.
.TP 15
[ENAMETOOLONG]
A component of a pathname exceeded 255 characters, or an
entire path name exceeded 1023 characters.
.TP 15
[ENOENT]
The named file does not exist.
.TP 15
[EACCES]
Search permission is denied for a component of the path prefix.
.TP 15
[EFAULT]
The
.I buf
or
.I name
points to an invalid address.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the
pathname.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the
file system.
.PP
The
.PN fstat
system call
will fail if one or both of the following are true:
.TP 15
[EBADF]
The
.I fildes
is not a valid open file descriptor.
.TP 15
[EFAULT]
The
.I buf
points to an invalid address.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the file
system.
.TP 15
[EOPNOTSUPP]
The file descriptor points to a socket.
.TP
[ETIMEDOUT]
A "connect" request or remote file operation failed
because the connected party
did not properly respond after a period
of time which is dependent on the communications protocol.
.SH "SEE ALSO"
chmod(2), chown(2), utimes(2)
