.TH read 2
.\" Last modified by Michaud 16-Sept-1986 1300.
.\" Last modified by BAM on 27-Nov-1985 1300.
.\"
.\" Last modified by BAM on 30-Oct-1985 1300.
.\"
.\" Last modified by BAM on 19-Jul-85  1100  
.\"
.SH NAME
read, readv \- read input
.SH SYNTAX
.nf
.ft B
cc = read(d, buf, nbytes)
int cc, d;
char *buf;
int nbytes;
.PP
.ft B
#include <sys/types.h>
#include <sys/uio.h>
.PP
.ft B
cc = readv(d, iov, iovcnt)
int cc, d;
struct iovec *iov;
int iovcnt;
.fi
.SH DESCRIPTION
The 
.PN read
system call attempts to read
.I nbytes
of data from the object referenced by the descriptor
.I d
into the buffer pointed to by
.IR buf .
The
.PN readv
performs the same action, but scatters the input data
into the 
.I iovcnt
buffers specified by the members of the
.I iovec
array: iov[0], iov[1], ..., iov[iovcnt\|\-\|1].
.PP
For 
.PN readv ,
the 
.I iovec
structure is defined as
.PP
.EX
struct iovec {
	caddr_t	iov_base;
	int	iov_len;
};
.EE
.PP
Each 
.I iovec
entry specifies the base address and length of an area
in memory where data should be placed. 
The
.PN readv
system call
will always fill an area completely before proceeding
to the next.
.PP
On objects capable of seeking, the
.PN read
starts at a position
given by the pointer associated with
.IR d ,
see lseek(2).
Upon return from
.PN read ,
the pointer is incremented by the number of bytes actually read.
.PP
Objects that are not capable of seeking always read from the current
position.  The value of the pointer associated with such a 
object is undefined.
.PP
Upon successful completion,
.PN read
and
.PN readv
return the number of bytes actually read and placed in the buffer.
The system guarantees to read the number of bytes requested if
the descriptor references a file which has that many bytes left
before the end-of-file, but in no other cases.
.PP
If the returned value is 0, then
end-of-file has been reached.
.PP
If successful, the
number of bytes actually read is returned.
Otherwise, a \-1 is returned and the global variable
.I errno
is set to indicate the error.
.SH ENVIRONMENT
When your program is compiled using the System V environment,
.I read and readv
return 0 if the file has been set up for non-blocking
\fBI/O\fP and the read would block.
.SH DIAGNOSTICS
The
.PN read
and
.PN readv
system calls will fail if one or more of the following are true:
.TP 15
[EBADF]
The
.I d
argument is not a valid file or socket descriptor open for reading.
.TP 15
[EFAULT]
\fIBuf\fP points outside the allocated address space.
.TP 15
[EINTR]
A read from a slow device was interrupted before
any data arrived by the delivery of a signal.
.TP 15
[EIO]
An I/O error occurred while reading from the file system.
.TP 15
[ESTALE]
The file handle given in the argument is invalid. The
file referred to by that file handle no longer exists
or has been revoked.
.PP
In addition, 
.PN readv
may return one of the following errors:
.TP 15
[EINVAL]
The
.I iovcnt
was less than or equal to 0, or greater than 16.
.TP 15
[EINVAL]
One of the
.I iov_len
values in the
.I iov
array was negative.
.TP 15
[EINVAL]
The sum of the
.I iov_len
values in the
.I iov
array overflowed a 32-bit integer.
.TP 15
[EFAULT]
Part of the 
.I iov
points outside the process's allocated address space.
.TP
[ETIMEDOUT]
A "connect" request or remote file operation failed
because the connected party
did not properly respond after a period
of time which is dependent on the communications protocol.
.SH "SEE ALSO"
dup(2), open(2), pipe(2), socket(2), socketpair(2)
