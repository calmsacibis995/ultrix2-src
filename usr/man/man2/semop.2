.TH semop 2
.\" Last modified by BAM on 11-Nov-1985 1300.
.\"
.\" Last modified by BAM on 8-Aug-85  1300  
.\"
.SH NAME
semop \- semaphore operations
.SH SYNTAX
.nf
.ft B
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
.PP
.ft B
int semop (semid, sops, nsops)
int semid;
struct sembuf *sops[];
int nsops;
.fi
.SH DESCRIPTION
The
.PN semop
system call
is used to automatically perform an
array of semaphore operations on the set of
semaphores associated with the semaphore identifier specified by 
.IR semid .
The
.I sops
is a pointer to the array of semaphore-operation structures.
The
.I nsops
is the number of such structures in the array.
The contents of each structure
includes the following members:
.EX
short	sem_num;	/* semaphore number */
short	sem_op;	/* semaphore operation */
short	sem_flg;	/* operation flags */
.EE
.PP
Each semaphore operation specified by
.I sem_op
is performed on the corresponding semaphore specified by
.I semid
and
.IR sem_num .
.PP
The
.I sem_op
specifies one of three semaphore operations as follows:
.IP
If
.I sem_op
is a negative integer, one of the following will occur: 
.RS 8
.PP
If 
.I semval
is greater than or equal to the absolute value of
.I sem_op,
the absolute value of
.I sem_op
is subtracted from semval.  
For further information, see intro(2).
Also, if 
.RI ( sem_flg
&
.BR SEM_UNDO)
is "true", the absolute value of
.I sem_op
is added to the calling process's semadj value 
for the specified semaphore.
For further information, see exit(2).
.PP
If semval is less than the absolute value of
.I sem_op
and 
.RI ( sem_flg
&
.BR IPC_NOWAIT)
is "true", 
.I semop
will return immediately.
.PP
If semval is less than the absolute value of
.I sem_op
and 
.IR ( sem_flg
&
.BR IPC_NOWAIT )
is "false", 
.I semop
will increment the semncnt associated
with the specified semaphore and
suspend execution of the calling
process until one of the following occurs:
.RS 8
.PP
Semval becomes greater than
or equal to the absolute value of 
.I sem_op.
When this occurs, the value of
semncnt associated with the specified
semaphore is decremented, the absolute value of 
.I sem_op
is subtracted from semval, and if 
.RI ( sem_flg
&
.BR SEM_UNDO)
is "true", the absolute value of
.I sem_op
is added to the calling process's
semadj value for the specified semaphore.
.PP
The semid for which the calling
process is awaiting action is removed
from the system.  For further information, see
semctl(2).
When this occurs, 
.I errno
is set equal to EIDRM, and a value of -1 is returned.
.PP
The calling process receives a signal
that is to be caught.  When this occurs,
the value of semncnt associated with
the specified semaphore is decremented,
and the calling process resumes execution
in the manner prescribed in signal(3).
.RE
.RE
.PP
If
.I sem_op
is a positive integer, the value of 
.I sem_op
is added to semval and, if 
.RI ( sem_flg
&
.BR SEM_UNDO)
is "true", the value of 
.I sem_op
is subtracted from the calling process's semadj value for the
specified semaphore. 
.PP
If
.I sem_op 
is zero, one of the following will occur:
.RS 8
.PP
If semval is zero,
.I semop
will return immediately.
.PP
If semval is not equal to zero and 
.RI ( sem_flg
&
.BR IPC_NOWAIT)
is "true",
.I semop
will return immediately.
.PP
If 
.I semval
is not equal to zero and 
.RI ( sem_flg
&
.BR IPC_NOWAIT)
is "false", 
.I semop
will increment the semzcnt associated
with specified semaphore and suspend
execution of the calling process until
one of the following occurs:
.RS 8
.PP
The
.I semval
became zero, at which time
the value of semzcnt associated with
the specified semaphore is decremented.
.PP
The semid for which the calling process
is awaiting action is removed from the
system.  When this occurs,
.I errno
is set equal to EIDRM, and a value of -1 is returned.
.PP
The calling process receives a signal
that is to be caught.  When this occurs,
the value of semzcnt associated with
the specified semaphore is decremented,
and the calling process resumes execution
in the manner prescribed in 
signal(3).
.RE
.RE
.RE
.PP
Upon successful completion, the value of sempid for each semaphore
specified in the array pointed to by
.I sops
is set equal to the process ID of the calling process.
The value of semval at the time of the call
for the last operation in the array pointed to by
.I sops 
is returned.  Otherwise, a value of -1 is returned and 
.I errno
is set to indicate the error.
.SH DIAGNOSTICS
The
.PN semop
will fail if one or more of the following are true for any of the
semaphore operations specified by 
.IR sops:
.TP 15
[EINVAL]
The
.I semid
is not a valid semaphore identifier. 
.TP 15
[EFBIG]
The
.I sem_num
is less than zero or greater than or
equal to the number of semaphores
in the set associated with
.IR semid.
.TP 15
[E2BIG]
The
.I nsops
is greater than the system imposed maximum. 
.TP 15
[EACCESS]
Operation permission is denied to the calling process.
For further information, see intro(2). 
.TP 15
[EAGAIN]
The operation would result in suspension of the calling process but 
.RI ( sem_flg
&
.BR IPC_NOWAIT)
is "true". 
.TP 15
[ENOSPC]
The limit on the number of individual processes requesting an 
.B SEM_UNDO
would be exceeded. 
.TP 15
[ENOSPC]
The number of individual semaphores
for which the calling process request a 
.B SEM_UNDO
would be exceeded. 
.TP 15
[EINVAL]
The number of individual semaphores
for which the calling process request a
.B SEM_UNDO
would exceed the limit. 
.TP 15
[ERANGE]
An operation would cause a semval
to overflow the system imposed limit.
.TP 15
[ERANGE]
An operation would cause a semadj value
to overflow the system imposed limit. 
.TP 15
[EFAULT]
The
.I sops
points to an illegal address. 
.TP 15
[EINTR]
The
\fIsemop\fP returns due to the receipt of a signal.
.TP
[EIDRM]
The
\fIsemid\fP has been removed from the system.
.SH SEE ALSO
execve(2), exit(2), fork(2), semctl(2), semget(2), signal(3)
