.\" Last modified by Michaud on 16-Sept-1986 1000.
.\" Last modified by BAM on 13-Nov-85 1500
.\" Last modified by BAM on 4-Dec-1985 1300.
.\"
.\" Last modified by BAM on 27-Nov-1985 1300.
.\"
.TH creat 2
.\" Last modified by BAM on 2-Aug-85  1000  
.\"
.SH NAME
creat \- create a new file
.SH SYNTAX
.nf
.B #include <limits.h> /*Definition of OPEN_MAX*/
.B creat(name, mode)
.B char *name;
.fi
.SH DESCRIPTION
The 
.PN creat
system call creates a new file or prepares to rewrite 
an existing file called 
.IR name ,
given as the address of a null-terminated string.
If the file did not exist, it is given
mode
.IR mode ,
as modified by the process's mode mask.
For further information, see umask(2).
Also see chmod(2)
for the construction of the
.I mode
argument.
.PP
If the file did exist, its mode and owner remain unchanged
but it is truncated to 0 length.
.PP
The file is also opened for writing, and its file descriptor
is returned.
.PP
The
.I mode
given is arbitrary; it need not allow
writing.
This feature has been used in the past by
programs to construct a simple exclusive locking
mechanism.  It is replaced by the O_EXCL open
mode, or flock(2) facility.
.PP
No process may have more than 
.B OPEN_MAX
files simultaneously.
.PP
The value \-1 is returned if an error occurs.  Otherwise,
the call returns a non-negative descriptor which only permits
writing. 
.SH ENVIRONMENT
Differs from the System V definition in that
.B ELOOP
and
.B ENXIO
are possible error conditions, but
.B ENFILE
and
.B ENOSPC
are not.
.SH DIAGNOSTICS
.I Creat
will fail and the file will not be created or truncated
if one of the following occur:
.TP 15
[EINVAL]
The argument contains a character with the high-order bit set.
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[EACCES]
Search permission is denied for a component of the path prefix.
.TP 15
[EACCES]
The file does not exist and the directory
in which it is to be created is not writable.
.TP 15
[EACCES]
The file exists, but it is unwritable.
.TP 15
[EISDIR]
The file is a directory.
.TP 15
[EMFILE]
There are too many files open.
.TP 15
[EROFS]
The named file resides on a read-only file system.
.TP 15
[ENXIO]
The file is a character special or block special file, and
the associated device does not exist.
.TP 15
[ETXTBSY]
The file is a pure procedure (shared text) file that is being
executed.
.TP 15
[EFAULT]
.I Name
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the
pathname.
.TP 15
[EOPNOTSUPP]
The file is a socket, which is not implemented.
.TP 15
[ENAMETOOLONG]
A component of a pathname exceeded 255 characters, or an entire
pathname exceeded 1023 characters.
.TP 15
[ENOENT]
The named file does not exist.
.TP 15
[ENFILE]
The system file table is full.
.TP 15
[ENOSPC]
The directory in which the entry for the new file is being
placed cannot be extended because there is no space left on
the file system containing the directory.
.TP 15
[ENOSPC]
There are no free inodes on the file system on which the
file is being created.
.TP 15
[EDQUOT]
The directory in which the entry for the new file is being placed
cannot be extended because the user's quota of disk blocks on the
file system containing the directory has been exhausted.
.TP 15
[EDQUOT]
The user's quota of inodes on the file system on which the
file is being created has been exhausted.
.TP 15
[EIO]
An I/O error occurred while making the directory entry
or allocating the inode.
.TP 15
[ESTALE]
The file handle given in the argument is invalid.  The file
referred to by that file handle no longer exists or has been 
revoked.
.TP
[ETIMEDOUT]
A "connect" request or remote file operation failed
because the connected party
did not properly respond after a period
of time which is dependent on the communications protocol.
.SH "SEE ALSO"
close(2), chmod(2), open(2), umask(2), write(2)
