.TH send 2
.SH NAME
send, sendto, sendmsg \- send a message from a socket
.SH SYNTAX
.nf
.ft B
#include <sys/types.h>
#include <sys/socket.h>
.PP
.ft B
cc = send(s, msg, len, flags)
int cc, s;
char *msg;
int len, flags;
.PP
.ft B
cc = sendto(s, msg, len, flags, to, tolen)
int cc, s;
char *msg;
int len, flags;
struct sockaddr *to;
int tolen;
.PP
.ft B
cc = sendmsg(s, msg, flags)
int cc, s;
struct msghdr msg[];
int flags;
.fi
.SH DESCRIPTION
The
.PN send ,
.PN sendto ,
and
.PN sendmsg
system calls
are used to transmit a message to another socket.
The
.I send
system call
may be used only when the socket is in a 
.I connected
state, while the 
.Pn sendto
and
.PN sendmsg
system calls
may be used at any time.
.PP
The address of the target is given by
.I to
with 
.I tolen
specifying its size.
The length of the message is given by
.IR len .
If the message is too long to pass atomically through the
underlying protocol, then the error EMSGSIZE is returned, and
the message is not transmitted.  If the address specified
in the argument is a broadcast address, the SO_BROADCAST
option must be set for broadcasting to succeed.
.PP
No indication of failure to deliver is implicit in a
.PN send .
Return values of \-1 indicate some locally detected errors.
.PP
If no messages space is available at the socket to hold
the message to be transmitted, then
.PN send
normally blocks, unless the socket has been placed in
non-blocking i/o mode.
The select(2)
call may be used to determine when it is possible to
send more data.
.PP
The
.I flags
parameter may be set to MSG_OOB to send \*(lqout-of-band\*(rq
data on sockets which support this notion (e.g. SOCK_STREAM).
.PP
See recv(2)
for a description of the
.I msghdr
structure.
.PP
The call returns the number of characters sent, or \-1
if an error occurred.
.SH DIAGNOSTICS
.TP 20
[EBADF]
An invalid descriptor was specified.
.TP 20
[ENOTSOCK]
The argument \fIs\fP is not a socket.
.TP 20
[EFAULT]
An invalid user space address was specified for a parameter.
.TP 20
[EMSGSIZE]
The socket requires that message be sent atomically,
and the size of the message to be sent made this impossible.
.TP 20
[EWOULDBLOCK]
The socket is marked non-blocking and the requested operation
would block.
.SH SEE ALSO
recv(2), getsockopt(2), socket(2)
