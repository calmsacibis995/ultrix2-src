.\" Last modified by BAM on 31-Oct-1985 1300.
.\"
.\" Last modified by BAM on 19-Jul-85  1100  
.\"
.TH wait 2
.SH NAME
wait, wait3 \- wait for process to terminate
.SH SYNTAX
.ft B
.nf
#include <sys/wait.h>
.PP
.ft B
pid = wait(status)
int pid;
union wait *status;
.PP
.ft B
pid = wait(0)
int pid;
.PP
.ft B
#include <sys/time.h>
#include <sys/resource.h>
.PP
.ft B
pid = wait3(status, options, rusage)
int pid;
union wait *status;
int options;
struct rusage *rusage;
.fi
.SH DESCRIPTION
The
.PN wait
system call
causes its caller to delay until a signal is received or
one of its child
processes terminates.
If any child has died since the last
.PN wait ,
return is immediate, returning the process id and
exit status of one of the terminated
children.
If there are no children, return is immediate with
the value \-1 returned.
.PP
On return from a successful 
.PN wait
call, 
.I status
is nonzero, and the high byte of 
.I status
contains the low byte of the argument to
.I exit
supplied by the child process;
the low byte of 
.I status
contains the termination status of the process.
A more precise definition of the
.I status
word is given in < sys/wait.h >.
.PP
The
.PN wait3
system call
provides an alternate interface for programs
which must not block when collecting the status
of child processes.  The
.I status
parameter is defined as above.  The
.I options
parameter is used to indicate the call should not block if
there are no processes which wish to report status (WNOHANG),
and/or that only children of the current process which are stopped
due to a SIGTTIN, SIGTTOU, SIGTSTP, or SIGSTOP signal should have
their status reported (WUNTRACED).  If
.I rusage
is non-zero, a summary of the resources used by the terminated
process and all its
children is returned (this information is not available
for stopped processes).
.PP
When the WNOHANG option is specified and no processes
wish to report status, 
.PN wait3
returns a 
.I pid
of 0.  The WNOHANG and WUNTRACED options may be combined by 
.IR or 'ing
the two values.
.PP
See sigvec(2)
for a list of termination statuses (signals).  A
0 status indicates normal termination.
A special status (0177) is returned for a stopped process
which has not terminated and can be restarted.  For further
information, see ptrace(2).
If the 0200 bit of the termination status
is set,
a core image of the process was produced
by the system.
.PP
If the parent process terminates without
waiting on its children,
the initialization process
(process ID = 1)
inherits the children.
.PP
The
.PN wait
and
.I wait3
system calls
are automatically restarted when a process receives a
signal while awaiting termination of a child process.
.PP
If 
.PN wait 
returns due to a stopped
or terminated child process, the process ID of the child
is returned to the calling process.  Otherwise, a value of \-1
is returned and \fIerrno\fP is set to indicate the error.
.PP
The
.PN wait3
system call
returns \-1 if there are no children not previously waited
for;  0 is returned if WNOHANG is specified and there are
no stopped or exited children.
.SH ENVIRONMENT
When your program is complied using the System V environment,
when the \fBSIGCLD\fP signal is being ignored, \fIwait\fP
continues until all children terminate.
\fBSIGCLD\fP is the same as \fBSIGCHLD\fP.
.SH DIAGNOSTICS
The
.PN wait
system call
will fail and return immediately if one or more of the following
are true:
.TP 15
[ECHILD]
The calling process has no existing unwaited-for
child processes.
.TP 15
[EFAULT]
The \fIstatus\fP or \fIrusage\fP arguments point to an illegal address.
.SH "SEE ALSO"
exit(2)
