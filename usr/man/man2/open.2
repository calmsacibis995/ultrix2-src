.\"    Last modified by Michaud 16Sept86
.\"    March 3, 1986 -- V2.0 stuff from Shaughnessy (CCB)
.\"
.\"    Last modified by BAM on Nov 27, 1985
.\"
.\"    Last edited by Carolyn Belman incorporating review
.\"    comments from Larry Cohen and Bev Michaud, August 2, 1985
.\"
.\"    August 8, 1985 -- Include Sys V stuff from Dave Ballenger
.\"
.TH open 2
.SH NAME
open \- open a file for reading or writing, or create a new file
.SH SYNTAX
\fB#include <sys/file.h>
.br
#include <limits.h>     /* definition of OPEN_MAX */
.PP
.B open(path, flags, mode)
.br
.B char *path;
.br
.B int flags, mode;
.SH DESCRIPTION
The
.PN open
system call opens the file specified 
and returns a descriptor for that file.
The file pointer used to mark the current position within
the file is set to the beginning of the file.
.PP
The file descriptor remains open across 
.MS execve 2
system calls. The 
.MS close 2 
system call closes the file descriptor.
.PP
No process may have more than OPEN_MAX 
file descriptors
open simultaneously.  
.SH ARGUMENTS
.IP \fIpath\fR .5i
is the address of a string of ASCII characters representing
a path name, terminated by a null character.  The path name
identifies the file to be opened.
.IP \fImode\fR .5i
Only used with the O_CREAT flag.  The file is created
with the specified mode, as described in
.MS chmod 2
and modified by the process's umask value
(see
.MS umask 2 ).
.IP \fIflags\fR .5i
define how the file is to be opened.  This argument is formed by
.IR or 'ing
the following values:
.RS
.IP "O_RDONLY" 1.25i
open for reading only
.IP "O_WRONLY" 1.25i
open for writing only
.IP "O_RDWR" 1.25i
open for reading and writing
.IP "O_NDELAY" 1.25i
do not block on open
.IP "" 1.25i
When opening a port (named pipe) with O_RDONLY or O_WRONLY:
.IP "" 1.5i
If O_NDELAY is set, an 
.PN open
for reading only will return without delay.  An
.PN open
for writing only will return an error if no process currently has
the file open for reading.
.IP "" 1.5i
If O_NDELAY is clear, an
.PN open
for reading only will block until a process opens the
file for writing.  An
.PN open
for writing only will block until a process opens the
file for reading.
.IP "O_APPEND" 1.25i
append on each write
.IP "O_CREAT" 1.25i
create file if it does not exist
.IP "O_TRUNC" 1.25i
truncate size to 0
.IP "O_EXCL" 1.25i
error if create and file exists
.IP "O_BLKINUSE" 1.25i
block if file is in use
.IP "O_BLKANDSET" 1.25i
block if file is in use then set in use
.IP "O_FSYNC" 1.25i
do file writes synchronously
.RE
.IP "" .5i
Opening a file with O_APPEND set causes each write on the file
to be appended to the end.  
.IP "" .5i
If O_TRUNC is specified and the
file exists, the file is truncated to zero length.
.IP "" .5i
If O_EXCL is set with O_CREAT, then if the file already
exists, the open returns an error.  This can be used to
implement a simple exclusive access locking mechanism.
.IP "" .5i
If the O_NDELAY flag is specified and the open call would result
in the process being blocked for some reason, the open returns
immediately.
For
example, if the process were waiting for carrier on a dialup
line, an open with the O_NDELAY flag would return immediately. 
The first time the process attempts to perform I/O on the open
file, it will block. 
.IP "" .5i
If the O_FSYNC flag is specified, each subsequent write 
(see
.MS write 2 )
for the file
is synchronous, instead of the default asynchronous
writes.   Use this flag to be sure that the write
is complete when the system call returns.   With asynchronous
writes, 
the call returns when data is written to the buffer cache.
There is no guarantee that the data was actually written out 
to the device.  With synchronous writes, the call returns
when the data is written from the buffer cache to the device.
.IP "" .5i
O_BLKINUSE and O_BLKANDSET provide a test and set
operation similar to a semaphore.
O_BLKINUSE will cause the open to block if another process has
marked the file as in use.  
The 
.PN open
blocks in the system at a point where no references to
the file are established.
.IP "" .5i
There are two ways to mark a file as in use:
.RS
.IP 1.
Use the 
.MS ioctl 2
system call with the 
.I request
argument set to FIOSINUSE or TIOCSINUSE.
(See
.MS tty 4 .)
.IP 2.
Use the O_BLKANDSET flag to
.MS open 2 .
.RE
.IP "" .5i
O_BLKANDSET will cause the  
.PN open 
to block if another process has
marked the file in use.   When the 
.PN open
resumes, the file
is marked in use by the current process. 
.IP "" .5i
If O_NDELAY is used in conjunction with either O_BLKINUSE or 
O_BLKANDSET, the 
.PN open 
will fail if the file is in use.
The external variable 
.PN errno 
is set to EWOULDBLOCK in this case.
.NT
The in use flag cannot
be inherited by a child process nor can it be replicated by 
.MS dup 2 .
.NE
When the in use flag is cleared, all processes that are blocked
for that reason will resume.
The 
.PN open 
will continue to block 
if another process marks the file as in use
again.
.IP "" .5i
The in use flag can be cleared in three ways:  
.RS
.IP 1.
When the file descriptor marked as in use is closed
.IP 2.
When the process that set the in use flag exits
.IP 3.
When an
.MS ioctl 2
system call is issued with the
.I request 
argument as FIOCINUSE or TIOCCINUSE.  
.RE
.SH ENVIRONMENT
When your program is compiled using the System V environment, and
O_NDELAY is specified, subsequent reads and writes
are also affected.
.SH DIAGNOSTICS
The named file is opened unless one or more of the
following are true:
.TP 15
[EINVAL]
The pathname contains a character with the high-order bit set.
.TP 15
[EINVAL]
An attempt was made to open a file with the O_RDONLY and
O_FSYNC flags set.  
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[ENOENT]
O_CREAT is not set and the named file does not exist.
.TP 15
[EACCES]
The required permissions for reading and/or writing
are denied for the named flag.
.TP 15
[EISDIR]
The named file is a directory, and the arguments specify
it is to be opened for writing.
.TP 15
[EROFS]
The named file resides on a read-only file system,
and the file is to be modified.
.TP 15
[EMFILE]
{OPEN_MAX} file descriptors are currently open.
.TP 15
[ENXIO]
The named file is a character special or block
special file, and the device associated with this special file
does not exist.
.TP 15
[ETXTBSY]
The file is a pure procedure (shared text) file that is being
executed and the 
.PN open
call requests write access.
.TP 15
[EFAULT]
.I Path
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
.TP 15
[EEXIST]
O_CREAT and O_EXCL were specified and the file exists.
.TP 15
[ENXIO]
The O_NDELAY flag is given, and the file is a communications device
on which there is no carrier present.
.TP 15
[EOPNOTSUPP]
An attempt was made to open a socket that is not set active. 
.TP 15
[EWOULDBLOCK]
The open would have blocked if the O_NDELAY was not used.	
The probable cause for the block is that the file was marked in use.
.TP 15
[ENAMETOOLONG]
A component of a pathname exceeded 255 characters, or an entire
pathname exceeded 1023 characters.
.TP 15
[ENOENT]
A component of the path name that must exist does not exist.
.TP 15
[EACCES]
Search permission is denied for a component of the path prefix.
.TP 15
[EACCES]
O_CREAT is specified, the file does not exist, and the
directory in which it is to be created does not permit
writing.
.TP 15
[ENFILE]
The system file table is full.
.TP 15
[ENOSPC]
O_CREAT is specified, the file does not exist,
and the directory in which the entry for the new file is being
placed cannot be extended because there is no space left on the
file system containing the directory.
.TP 15
[ENOSPC]
O_CREAT is specified, the file does not exist, and there
are no free inodes on the file system on which the
file is being created.
.TP 15
[EDQUOT]
O_CREAT is specified, the file does not exist, and
the directory in which the entry for the new file is
being placed cannot be extended because the user's
quota of disk blocks on the file system containing
the directory has been exhausted.
.TP 15
[EDQUOT]
O_CREAT is specified, the file does not exist,
and the user's quota of inodes on the file system on
which the file is being created has been exhausted.
.TP 15
[EIO]
An I/O error occurred while making the directory entry or allocating
the inode for O_CREAT.
.TP 15
[ESTALE]
The file handle given in the argument is invalid.  The 
file referred to by that file handle no longer exists 
or has been revoked.
.TP
[ETIMEDOUT]
A "connect" request or remote file operation failed
because the connected party
did not properly respond after a period
of time which is dependent on the communications protocol.
.SH "SEE ALSO"
chmod(2), close(2), dup(2), fcntl(2), lseek(2), read(2), write(2),
umask(2), tty(4)
