.TH plock 2
.SH NAME
plock \- lock process, text, or data in memory
.SH SYNTAX
.B #include <sys/lock.h>
.PP
.B int plock (op)
.br
.B int op;
.SH DESCRIPTION
The
.PN plock
call allows the calling process to lock its text segment (text lock),
its data segment (data lock),
or both its text and data segments (process lock)
into memory.
Locked segments are immune to page outs, and the process is immune
to swap outs.  The
.PN plock
call also unlocks these segments.
.PP
Upon successful completion, a value of 0 is returned to the
calling process.  Otherwise, a value of \-1 is returned, and
.I errno
is set to indicate the error.
.PP
The
.I op
argument specifies the following:
.IP PROCLOCK 1i
Lock text and data segments into memory (process lock)
.IP TXTLOCK 1i
Lock text segment into memory (text lock)
.IP DATLOCK 1i
Lock data segment into memory (data lock)
.IP UNLOCK 1i 
Remove locks
.SH DIAGNOSTICS
The
.PN plock 
call will fail if one or more of the following are true:
.TP 15 
[EPERM]
The effective user ID of the calling process is not superuser.
.TP 15 
[EINVAL]
The
.I op
argument is equal to PROCLOCK and a process lock,
a text lock, or a data lock already exists on the
calling process.
.TP 15 
[EINVAL]
The
.I op 
argument is equal to TXTLOCK and a text lock
or a process lock already exists on the calling process.
.TP 15 
[EINVAL]
The
.I op
argument is equal to DATLOCK and a data lock or a process
lock already exists on the calling process.
.TP 15 
[EINVAL]
The 
.I op
argument is equal to UNLOCK and no type of lock exists
on the calling process.
.SH RESTRICTIONS 
The effective user ID of the calling process must be superuser to
use this call.
.PP
Both 
PROCLOCK 
and 
TXTLOCK 
lock the text segment of a process, and a locked
text segment
is locked for all sharing processes.
.PP
Since the effective user ID of the calling process is superuser,
take care not to lock more virtual pages 
than can be contained in physical memory,
since a deadlock may result.
.SH SEE ALSO
execve(2), exit(2), fork(2), shmctl(2)
