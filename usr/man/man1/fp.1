.\" Last modified by MJT on 26-Aug-85  23
.\"  Repaired beginning matter to work right in whatis database
.\"  Deleted defined string s, which provided variable section
.\"   number for lisp and liszt -- used plain old IR instead
.TH fp 1
.SH NAME
fp \- Functional Programming language compiler/interpreter
.SH SYNTAX
.B fp
.SH DESCRIPTION
.PP
.I Fp
is an
interpreter/compiler that implements the applicative language proposed
by John Backus.  It is written in
.SM
.BR "FRANZ LISP" .
.PP
In a  functional programming language
intent is expressed
in  a mathematical style devoid of assignment statements
and variables.
Functions compute by value only; there are no side-effects
since  the result of a computation depends solely on the inputs.
.PP
.I Fp
"programs" consist of
.I functional expressions \-
primitive and user-defined 
.I fp
functions
combined by 
.I functional forms.
These forms take functional arguments
and return functional results.
For example, the composition
operator 
.I '@'
takes two functional arguments and returns a function
which represents their composition.
.PP
There exists a single operation in 
.I fp
\&\-
.I application.
This operation causes the system to evaluate the indicated function using
the single argument 
as input
(all functions are monadic).
.SH GETTING STARTED
.PP
.I Fp
invokes the system.  
.I Fp
compiles functions into
.IR lisp (1)
source code;
.IR lisp (1)
interprets this code
(the user may compile this code using the
.IR liszt (1)
compiler to gain a factor of 10 in performance).
.I Control D
exits back to the shell.
.I Break
terminates any computation in progress  and resets any open file units.
.I )help
provides a short summary of all user commands.
.SH FILES
.DT
/usr/ucb/lisp	the FRANZ LISP interpreter
.br
/usr/ucb/liszt	the liszt compiler
.br
/usr/doc/fp	the User's Guide
.SH SEE ALSO
.PP
.IR lisp (1),
.IR liszt (1).
.PP
.I The Berkeley FP user's manual,
available on-line.
The language is described  in  the August 1978 issue of  
.I CACM
(Turing award lecture by John Backus).
.SH RESTRICTIONS
.PP
If a non-terminating function is applied as the result of loading a file,
then control is returned to the user immediately, everything
after that position in the file is ignored.
.PP
FP incorrectly marks the location of a syntax error on
large, multi-line function definitions or applications.
