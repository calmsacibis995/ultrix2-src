.TH lint 1
.SH NAME
lint \- a C program verifier
.SH SYNTAX
.B lint
[
.B \-abchnpuvxYz
]
file ...
.SH DESCRIPTION
The
.PN lint
command attempts to detect features of the C program
.I files
which are
likely to be bugs, or non-portable, or wasteful.
It also checks the type usage of the program more strictly
than the compilers.
Among the things which are currently found are
unreachable statements,
loops not entered at the top,
automatic variables declared and not used,
and logical expressions whose value is constant.
Moreover, the usage of functions is checked to find
functions which return values in some places and not in others,
functions called with varying numbers of arguments,
and functions whose values are not used.
.PP
By default, it is assumed that all the
.I files
are to be loaded together; they are checked for
mutual compatibility.
Function definitions for certain libraries are available to
.PN lint.
These libraries are referred to by a
conventional name,
such as `\-lm', in the style of ld(1).
Arguments ending in .ln
are also treated as library files.  
.PP
To create lint libraries,
use the
.B \-C
option:
.IP
lint \-Cdlib files . . .
.PP
where
.I files
are the C sources of library
.IR dlib .
The result is a file
.I llib-ldlib.ln
in the correct library format suitable for linting programs
using
.IR dlib .  
Note that if you have set the System V environment
variable 
the System V lint library is used.
For further information, see intro(2).
.SH OPTIONS
Any number of the options in the following list
may be used.
The
.SM
.BR \-D "\*S,"
.SM
.BR \-U "\*S,"
and
.SM
.B \-I
options of cc(1)
are also recognized as separate arguments.
.TP
.B a
Report assignments of long values to int variables.
.TP
.B b
Report
.B break
statements that cannot be reached.  (This is not the
default because most
.B lex
and many
.B yacc
outputs produce dozens of such comments.)
.TP
.B c
Complain about casts that have questionable portability.
.TP
.B h
Apply a number of heuristic tests to attempt to find
bugs, improve style, and reduce waste.
.TP
.B n
Do not check compatibility against the standard library.
.TP
.B p
Attempt to check portability to the IBM and GCOS dialects
of C.
.TP
.B u
Do not complain about functions and variables used and
not defined, or defined and not used.  (This is suitable
for running
.PN lint
on a subset of files out of a larger program.)
.TP
.B v
Suppress complaints about unused arguments in functions.
.TP
.B x
Report variables referred to be extern declarations,
but never used.
.TP
.B Y
Use the System V version of the
.PN lint
library.
.TP
.B z
Do not complain about structures that are never defined
(for example, using a structure pointer without knowing
its contents.)
.SH RESTRICTIONS
The exit(2) system calls and other functions that do not return
are not understood; this causes various anomalies in
.B lint
output.
.PP
Certain conventional comments in the C source
will change the behavior of
.PN lint:
.TP
/*NOTREACHED*/
At appropriate points
stops comments about unreachable code.
.TP
.RI /*VARARGS n */
Suppresses
the usual checking for variable numbers of arguments
in the following function declaration.
The data types of the first
.I n
arguments are checked;
a missing
.I n
is taken to be 0.
.TP
/*NOSTRICT*/
Shuts off strict type checking in the next expression.
.TP
/*ARGSUSED*/
Turns on the
.B \-v
option for the next function.
.TP
/*LINTLIBRARY*/
At the beginning of a file shuts off complaints about
unused functions in this file.
.SH FILES
.ta \w'/usr/lib/lint/llib-port.ln  'u
/usr/lib/lint/lint1	The lint1 pass parses the C code much
			like the compiler, making extra
			checks for improper, but legal, prog-
			ramming techniques, such as constant
			expressions in conditionals, unreach-
			able statements, and so forth.
.br
/usr/lib/lint/lint2	The lint2 pass does cross-checking of 
			procedure calls in the program itself
			and also compared to the standard C
			library to catch incorrect or
			inconsistent routine calls.
.br
/usr/lib/lint/llib-lc.ln	Declarations for standard functions
.br
/usr/lib/lint/llib-lc	Human readable version of above
.br
/usr/lib/lint/llib-lcV.ln	System V declarations for standard functions
/usr/lib/lint/llib-port.ln	Declarations for portable functions
.br
/usr/lib/lint/llib-port	Human readable . . .
.br
llib-l*.ln	Library created with
.B \-C
.SH SEE ALSO
cc(1)
.sp
``Lint, a C Program Checker'',
.I ULTRIX-32 Supplementary Documents,
Vol. II:Programmer
