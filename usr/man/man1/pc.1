.\" Modified by Michaud Jan 8, l987
.\" Took out See Also reference to sdb.1, a SystemV
.\" manpage, should be checked to see if reference to 
.\" abd.1 is appropriate.
.TH pc 1
.SH NAME
pc \- Pascal compiler
.SH SYNTAX
.B pc
[ option ] 
name...
.SH DESCRIPTION
The
.PN pc
command
is a Pascal compiler.
If given an argument file ending with
a .p ,
it will compile the file 
and load it
into an executable file called, by default, a.out.
.PP
A program may be separated into more than one .p file.  The
.PN pc
command will compile a number of argument .p
files into object files (with
the extension .o
in place of .p).
Object files may then be loaded 
into an executable a.out file.
Exactly one object file must supply a 
.I program
statement to successfully create an executable a.out file.
The rest of the files must consist only of 
declarations which logically nest within the program.
References to objects shared between separately compiled files
are allowed if the objects are declared in
.PN include d
header files, whose names must end with .h.
Header files may only be included at the outermost level,
and thus declare only globally available objects.
To allow functions and procedures
to be declared, an
.I external
directive has been added, whose use is similar to the
.I forward
directive but restricted to appear only in
.PN .h
files.
The
.I function
and 
.I procedure
bodies may not appear in 
.PN .h 
files.  A binding phase of the compiler checks that declarations
are used consistently, to enforce the type checking rules of Pascal.
The binder is not as strict as described here,
with regard to the rules about external declarations only
in .h files and including .h files only at the outermost level.
.PP
Object files 
created by other language processors may be loaded together with
object files created by 
.PN pc.
The 
.I functions 
and 
.I procedures
they define must have been declared
in .h files included by all the .p
files which call those routines.
Calling conventions are as in C,
with
.I var
parameters passed by address.
.PP
The following options have the same meaning as in
.PN cc(1) 
and 
.PN f77(1).
See 
.PN ld(1) 
for load-time options.
.TP 6
.B \-c
Suppress loading and produce .o files from source files.
.TP 6
.B \-g
Have the compiler produce additional symbol table information for
.PN dbx(1).
.TP 6
.BR \-w
Suppress warning messages.
.TP 6
.B \-p
Prepare object files for profiling, see 
.PN prof(1).
.TP 6
.SM
.B \-O
Invoke an
object-code improver.
.TP 6
.SM
.B \-S
Compile the named program, and leave the
assembler-language output on the corresponding file suffixed .s.
No .o file is created.
.TP 6
.BR \-o " output"
Name the final output file
.I output
instead of a.out.
.PP
The following options are peculiar to
.PN pc.
.TP 6
.B \-C
Compile code to perform runtime checks,
verify
.B assert
calls,
and initialize all variables to zero as in
.IR pi .
.TP 6
.B  \-b
Block buffer the file
.I output.
.TP 6
.B  \-i
Produce a listing for
the specified procedures, functions and
include
files.
.TP 6
.B  \-l
Make a program listing during translation.
.TP 6
.B  \-s
Accept standard Pascal only;
non-standard constructs cause warning diagnostics.
.PP
Because the
.B \-s
option is usurped by the compiler,
it is not possible to pass the strip option to the loader.
Thus programs which are to be stripped, must be run through 
.PN strip(1) 
after they are compiled.
.TP 6
.BR \-t " directory"
Use the given
.I directory
for compiler temporary files.
.TP 6
.B  \-z
Allow execution profiling with
.PN pxp(1)
by generating statement counters, and arranging for the
creation of the profile data file pmon.out
when the resulting object is executed.  The
.B \-z
flag doesn't work for separately compiled files.
.PP
Other arguments are taken to be loader option arguments,
perhaps libraries of
.PN pc
compatible routines.
Certain flags can also be controlled in comments within the program.
.SH RESTRICTIONS
The keyword
.I packed
is recognized but has no effect.
.SH DIAGNOSTICS
See 
.PN pi(1) 
for an explanation of the error message format.
.SH FILES
.ta 2.5i
file.p	pascal source files
.br
/usr/lib/pc0	compiler
.br
/lib/f1	code generator
.br
/usr/lib/pc2	runtime integrator (inline expander)
.br
/lib/c2	peephole optimizer
.br
/usr/lib/pc3	separate compilation consistency checker
.br
/usr/lib/pc2.*strings	text of the error messages
.br
/usr/lib/how_pc	basic usage explanation
.br
/usr/lib/libpc.a	intrinsic functions and I/O library
.br
/usr/lib/libm.a	math library
.br
/lib/libc.a	standard library, see 
.PN intro(3)
.SH "SEE ALSO"
pi(1), pxp(1), pxref(1), 
.br
"Berkeley Pascal User's Manual,"
ULTRIX-32 Supplementary Documents,
.br
Vol. II:Programmer
