.TH yacc 1 
.SH NAME
yacc \- yet another compiler-compiler
.SH SYNTAX
.B yacc
[
.B \-vd
]
grammar
.SH DESCRIPTION
The
.PN yacc
command converts a context-free grammar into a set of
tables for a simple automaton which executes an
left recursive parsing algorithm.
The grammar may be ambiguous;
specified precedence rules are used to break ambiguities.
.PP
The output file, 
.PN y.tab.c,
must be compiled by the C compiler
to produce a program
.IR yyparse .
This program must be loaded with the lexical analyzer program,
.IR yylex ,
as well as
.I main
and
.IR yyerror ,
an error handling routine.
These routines must be supplied by the user; 
.PN lex(1)
is useful for creating lexical analyzers usable by
.PN yacc.
.PP
If the
.B \-v
flag is given, the file 
.PN y.output
is prepared, which contains a description of the parsing tables
and a report on
conflicts generated by ambiguities in the grammar.
.PP
If the \-\fBd\fR flag is used, the file 
.PN y.tab.h
is generated with the
.I define
statements that associate the
.PN yacc
-assigned token codes with the user-declared token names.
This allows source files other than 
.PN y.tab.c
to access the token codes.
.SH DIAGNOSTICS
The number of reduce-reduce and shift-reduce conflicts
is reported on the standard output;
a more detailed report is
found in the 
.PN y.output file.
Similarly, if some rules are not reachable from the
start symbol, this is also reported.
.SH RESTRICTIONS
Because file names are fixed, at most one
.PN yacc
process can be active in a given directory at
a time.
.SH FILES
y.output
.br
y.tab.c
.br
y.tab.h	defines for token names
.br
.SH "SEE ALSO"
lex(1)
.br
"YACC \- Yet Another Compiler Compiler"
.I ULTRIX-32 Supplementary Documents
Vol. II:Programmer 
