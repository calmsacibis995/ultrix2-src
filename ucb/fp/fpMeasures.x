(File fpMeasures.l)
(getFform macro cons quote list cadr)
(measConstr lambda atom cond size IncrSize IncrTimes length IncrFunArgNo nreverse cdr quote IncrFunArgTyp car cons setq null liszt-internal-do mapcar)
(measComp lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measWhile lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measCond lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measCons lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measSel lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measTi lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measIns lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(measAlph lambda length atom cond size IncrSize IncrTimes quote IncrFunArgTyp)
(d_isplay lambda reverse cdr length onep not car d_isplay cons setq liszt-internal-do maplist listp atom patom null cond)
(printName lambda put_obj quote concat stringp cdr implode cond memq setq explodec reverse let)
(doFuncArg lambda cdr cdar caar printName patom null cadr do cprintf terpri)
(SendMeasures (lambda . local) cddr terpri doFuncArg eq car printName cprintf bigp assoc cdr zerop not and cond cadr let null quote plist do)
(PrintMeasures lambda patom terpr close terpri SendMeasures quote outfile setq let cond)
(InitFunArgNo (lambda . local) nreverse cdr list quote get nconc car cons setq null liszt-internal-do mapcar)
(InitFunArgTyp (lambda . local) nreverse cdr list quote get nconc car cons setq null liszt-internal-do mapcar)
(InitSize (lambda . local) nreverse cdr list quote get nconc car cons setq null liszt-internal-do mapcar)
(IncrUDF lambda length atom size IncrSize IncrTimes quote get memq and cond)
(InitUDF lambda quote putprop)
(IncrSize lambda add cdr car return caar eq cond null get quote do assq rplacd)
(IncrTimes lambda |1+| cdr car return caar eq cond null get quote do assq rplacd inc)
(IncrFunArgTyp lambda |1+| cons list nconc setq *break break terpr cprintf cdr car return caar eq cond null get quote do assq sassq cadr assoc or sassoc rplacd inc)
(IncrFunArgNo lambda add *break break terpr cprintf cdr car return caar eq cond null get quote do assq or sassq rplacd inctimes)
(inctimes macro quote list caddr cadr)
(inc macro quote list cadr)
(sz lambda cdr length car size add atom null cond)
(untrace1 (lambda . local) remprop putd terpr patom extractName null cond quote get let)
(printLevel lambda |1+| oddp cond patom eq do)
(extName lambda cdr implode memq cond explodec reverse let)
(trace1 (lambda . local) cons list putd InitUDF append1 setq quote putprop terpr extractName patom null cond cxr getd let)
(Untrace lambda cdr terpr patom extractName untrace1 delq memq cond car null setq liszt-internal-do mapc)
(Trace lambda trace1 cdr terpr patom extractName delq memq cond car null liszt-internal-do mapc setq)
(extractName (lambda . local) concat explodec cdddr cons reverse implode patom)
(stopDynStats lambda setq Untrace cond)
(goodStats (lambda . local) cddr return bigp and cadr assoc cdr zerop not cond null quote plist do)
(InitMeasures lambda nreverse cdr list car cons setq null liszt-internal-do mapcar apply quote setplist)
(initStats lambda InitFunArgTyp InitFunArgNo InitSize quote append InitMeasures)
(dontLoseStats lambda PrintMeasures tyipeek eq tyo null and tyi Tyi progn msg If ratom explodec car let patom goodStats cond)
(clrDynStats lambda initStats dontLoseStats)
