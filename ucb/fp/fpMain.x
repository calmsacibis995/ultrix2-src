(File fpMain.l)
(bottom lambda *throw)
(last_cr (lambda . local) cdr last_cr memq null cond)
(p_indic (lambda . local) null cond If patom reverse last_cr cdr length msg-tyo-char terpr progn msg)
(synErrMsg (lambda . local) nreverse cdr car p_strng cons setq null reverse liszt-internal-do mapcar msg-tyo-char patom terpr progn msg)
(syntaxErr (lambda . local) terpri nreverse cdr p_strng liszt-internal-do mapcar setq tconc progn If tyipeek p_indic synErrMsg memq tyo null tyi Tyi do car eq and cond cons ncons let)
(doExit (lambda . local) exit close quote portp and dontLoseStats cond)
(rtime (lambda . local) product fix float quotient patom)
(put_obj lambda setq bigp not cdr and zerop do car put_obj concat length onep listp atom null cond)
(display (lambda . local) reverse cdr length onep not car display cons setq liszt-internal-do maplist listp atom patom null cond)
(fpMain lambda close msg-tyo-char car rtime terpr progn msg cadr diff setplist fpPP Internal-bcdcall getdisc bcdp cxr getd symbolp funcall ptime syscall plist copy If undefp syntaxErr atom find get_obj tyo tyi Tyi memq or tyipeek pp putprop explode cdddr nreverse implode setq patom put_fn let listp print not cond doExit terpri null eq and parse quote *catch do)
